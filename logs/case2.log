"C:\Program Files\Java\jdk1.8.0_66\bin\java" -Didea.launcher.port=7533 "-Didea.launcher.bin.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.5\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;D:\Supremad\Documents\TMP\PersistanceHibernate\target\classes;D:\Supremad\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Supremad\.m2\repository\org\postgresql\postgresql\9.4.1212\postgresql-9.4.1212.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-core\5.2.8.Final\hibernate-core-5.2.8.Final.jar;D:\Supremad\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\Supremad\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\Supremad\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\Supremad\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\Supremad\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\Supremad\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\Supremad\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\Supremad\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Supremad\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\Supremad\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;D:\Supremad\.m2\repository\org\slf4j\slf4j-api\1.5.8\slf4j-api-1.5.8.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.5\lib\idea_rt.jar" com.intellij.rt.execution.application.AppMain com.dauphine.App 2
Console output is saving to: D:\Supremad\Documents\IntelliJ\Logs
21:04:28 [main] logging[DEBUG] - Logging Provider: org.jboss.logging.Log4jLoggerProvider
21:04:28 [main] HibernatePersistenceProvider[DEBUG] - Located and parsed 1 persistence units; checking each
21:04:28 [main] HibernatePersistenceProvider[DEBUG] - Checking persistence-unit [name=PersistancePostgres, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PersistancePostgres]
21:04:28 [main] ProviderChecker[DEBUG] - Persistence-unit [PersistancePostgres] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
21:04:28 [main] LogHelper[DEBUG] - PersistenceUnitInfo [
	name: PersistancePostgres
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Supremad/Documents/TMP/PersistanceHibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.connection.username: postgres
		hibernate.connection.password: postgres
		hibernate.connection.url: jdbc:postgresql://localhost:5432/persistance
		hibernate.archive.autodetection: class
		hibernate.show_sql: true
		hibernate.connection.driver_class: org.postgresql.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update]
21:04:28 [main] IntegratorServiceImpl[DEBUG] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
21:04:28 [main] IntegratorServiceImpl[DEBUG] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
21:04:28 [main] IntegratorServiceImpl[DEBUG] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
21:04:28 [main] IntegratorServiceImpl[DEBUG] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
21:04:28 [main] Version[INFO] - HHH000412: Hibernate Core {5.2.8.Final}
21:04:28 [main] Environment[INFO] - HHH000206: hibernate.properties not found
21:04:28 [main] ServiceBinding[DEBUG] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
21:04:28 [main] RegionFactoryInitiator[DEBUG] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
21:04:28 [main] Version[INFO] - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration boolean -> org.hibernate.type.BooleanType@545997b1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration boolean -> org.hibernate.type.BooleanType@545997b1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@545997b1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2641e737
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@319b92f3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5c18298f
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration byte -> org.hibernate.type.ByteType@5d11346a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration byte -> org.hibernate.type.ByteType@5d11346a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d11346a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration character -> org.hibernate.type.CharacterType@10d59286
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration char -> org.hibernate.type.CharacterType@10d59286
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@10d59286
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration short -> org.hibernate.type.ShortType@24b1d79b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration short -> org.hibernate.type.ShortType@24b1d79b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24b1d79b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration integer -> org.hibernate.type.IntegerType@103f852
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration int -> org.hibernate.type.IntegerType@103f852
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@103f852
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration long -> org.hibernate.type.LongType@16022d9d
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration long -> org.hibernate.type.LongType@16022d9d
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@16022d9d
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration float -> org.hibernate.type.FloatType@134593bf
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration float -> org.hibernate.type.FloatType@134593bf
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@134593bf
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration double -> org.hibernate.type.DoubleType@5fcd892a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration double -> org.hibernate.type.DoubleType@5fcd892a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fcd892a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@543e710e
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@543e710e
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2698dc7
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2698dc7
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration string -> org.hibernate.type.StringType@5f71c76a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f71c76a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b9e255
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f416310
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration url -> org.hibernate.type.UrlType@60438a68
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@60438a68
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration Duration -> org.hibernate.type.DurationType@17695df3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17695df3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration Instant -> org.hibernate.type.InstantType@76a4d6c
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a4d6c
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cdd8682
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cdd8682
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17776a8
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17776a8
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@32a068d1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@32a068d1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@282003e1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@282003e1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4df828d7
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4df828d7
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5606c0b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5606c0b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration date -> org.hibernate.type.DateType@10b48321
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10b48321
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration time -> org.hibernate.type.TimeType@442675e1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@442675e1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d3fcdb0
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d3fcdb0
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d3fcdb0
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@64d7f7e0
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration calendar -> org.hibernate.type.CalendarType@28c4711c
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28c4711c
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28c4711c
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e9e725a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration locale -> org.hibernate.type.LocaleType@646be2c3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@646be2c3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration currency -> org.hibernate.type.CurrencyType@62bd765
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62bd765
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@58fdd99
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58fdd99
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration class -> org.hibernate.type.ClassType@7364985f
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7364985f
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61d47554
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61d47554
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d339552
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration binary -> org.hibernate.type.BinaryType@429bd883
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration byte[] -> org.hibernate.type.BinaryType@429bd883
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration [B -> org.hibernate.type.BinaryType@429bd883
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4461c7e3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4461c7e3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4461c7e3
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration row_version -> org.hibernate.type.RowVersionType@226a82c4
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration image -> org.hibernate.type.ImageType@64d2d351
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration characters -> org.hibernate.type.CharArrayType@176d53b2
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration char[] -> org.hibernate.type.CharArrayType@176d53b2
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration [C -> org.hibernate.type.CharArrayType@176d53b2
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51b7e5df
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51b7e5df
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51b7e5df
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration text -> org.hibernate.type.TextType@4206a205
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration ntext -> org.hibernate.type.NTextType@770c2e6b
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration blob -> org.hibernate.type.BlobType@400cff1a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@400cff1a
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75f9eccc
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration clob -> org.hibernate.type.ClobType@3ec300f1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ec300f1
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration nclob -> org.hibernate.type.NClobType@3c87521
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c87521
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5762806e
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ef60048
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration serializable -> org.hibernate.type.SerializableType@17c1bced
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration object -> org.hibernate.type.ObjectType@5906ebcb
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5906ebcb
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@55a561cf
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b938003
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f3b5d16
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78b1cc93
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6646153
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21507a04
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@143640d5
21:04:28 [main] BasicTypeRegistry[DEBUG] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6295d394
21:04:28 [main] pooling[WARN] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
21:04:29 [main] pooling[INFO] - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/persistance]
21:04:29 [main] pooling[INFO] - HHH10001001: Connection properties: {user=postgres, password=postgres}
21:04:29 [main] pooling[INFO] - HHH10001003: Autocommit mode: false
21:04:29 [main] DriverManagerConnectionProviderImpl[DEBUG] - Initializing Connection pool with 1 Connections
21:04:29 [main] DriverManagerConnectionProviderImpl[INFO] - HHH000115: Hibernate connection pool size: 20 (min=1)
21:04:29 [main] JdbcEnvironmentInitiator[DEBUG] - Database ->
       name : PostgreSQL
    version : 9.6.1
      major : 9
      minor : 6
21:04:29 [main] JdbcEnvironmentInitiator[DEBUG] - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1212
      major : 9
      minor : 4
21:04:29 [main] JdbcEnvironmentInitiator[DEBUG] - JDBC version : 4.0
21:04:29 [main] Dialect[INFO] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL94Dialect
21:04:29 [main] IdentifierHelperBuilder[DEBUG] - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
21:04:29 [main] LobCreatorBuilderImpl[INFO] - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
21:04:29 [main] BasicTypeRegistry[DEBUG] - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@54bff557
21:04:29 [main] BasicTypeRegistry[DEBUG] - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@54bff557
21:04:29 [main] BasicTypeRegistry[INFO] - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@61d47554
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
21:04:29 [main] DefaultIdentifierGeneratorFactory[DEBUG] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
21:04:29 [main] Namespace[DEBUG] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
21:04:29 [main] AnnotationBinder[DEBUG] - Binding entity from annotated class: com.dauphine.domain.Entreprise
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
21:04:29 [main] EntityBinder[DEBUG] - Import with entity name Entreprise
21:04:29 [main] EntityBinder[DEBUG] - Bind entity com.dauphine.domain.Entreprise on table entreprise
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=entreprise_id, insertable=true, updatable=true, unique=false}
21:04:29 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property id with lazy=false
21:04:29 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Entreprise:id]
21:04:29 [main] SimpleValueBinder[DEBUG] - building SimpleValue for id
21:04:29 [main] PropertyBinder[DEBUG] - Building property id
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=adresse, insertable=true, updatable=true, unique=false}
21:04:29 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property adresse with lazy=false
21:04:29 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Entreprise:adresse]
21:04:29 [main] SimpleValueBinder[DEBUG] - building SimpleValue for adresse
21:04:29 [main] PropertyBinder[DEBUG] - Building property adresse
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entreprise'}
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=apprentissages, insertable=true, updatable=true, unique=false}
21:04:29 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=null, insertable=true, updatable=true, unique=false}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=element, insertable=true, updatable=true, unique=false}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=apprentissages_KEY, insertable=true, updatable=true, unique=false}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='apprentissages_KEY', referencedColumn='null', mappedBy='null'}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entreprise'}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entreprise'}
21:04:30 [main] CollectionBinder[DEBUG] - Collection role: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] PropertyBinder[DEBUG] - Building property apprentissages
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entreprise), mappingColumn=nom, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property nom with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Entreprise:nom]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for nom
21:04:30 [main] PropertyBinder[DEBUG] - Building property nom
21:04:30 [main] AnnotationBinder[DEBUG] - Binding entity from annotated class: com.dauphine.domain.Apprenti
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
21:04:30 [main] EntityBinder[DEBUG] - Import with entity name Apprenti
21:04:30 [main] EntityBinder[DEBUG] - Bind entity com.dauphine.domain.Apprenti on table apprenti
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprenti), mappingColumn=apprenti_id, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property id with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprenti:id]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for id
21:04:30 [main] PropertyBinder[DEBUG] - Building property id
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='apprenti'}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprenti), mappingColumn=apprentissage, insertable=true, updatable=true, unique=false}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprenti), mappingColumn=nom, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property nom with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprenti:nom]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for nom
21:04:30 [main] PropertyBinder[DEBUG] - Building property nom
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprenti), mappingColumn=premom, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property prenom with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprenti:prenom]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for prenom
21:04:30 [main] PropertyBinder[DEBUG] - Building property prenom
21:04:30 [main] AnnotationBinder[DEBUG] - Binding entity from annotated class: com.dauphine.domain.Apprentissage
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
21:04:30 [main] EntityBinder[DEBUG] - Import with entity name Apprentissage
21:04:30 [main] EntityBinder[DEBUG] - Bind entity com.dauphine.domain.Apprentissage on table apprentissage
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=id, insertable=true, updatable=true, unique=false}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=apprenti_id, insertable=true, updatable=false, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property apprentiId with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprentissage.id:apprentiId]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for apprentiId
21:04:30 [main] PropertyBinder[DEBUG] - Building property apprentiId
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=entreprise_id, insertable=true, updatable=false, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property entrepriseId with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprentissage.id:entrepriseId]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for entrepriseId
21:04:30 [main] PropertyBinder[DEBUG] - Building property entrepriseId
21:04:30 [main] PropertyBinder[DEBUG] - Building property id
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='apprenti_id', referencedColumn='apprenti_id', mappedBy=''}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=apprenti, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - Building property apprenti
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3JoinColumn{logicalColumnName='entreprise_id', referencedColumn='entreprise_id', mappedBy=''}
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=entreprise, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - Building property entreprise
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=nomMA, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property nomMA with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprentissage:nomMA]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for nomMA
21:04:30 [main] PropertyBinder[DEBUG] - Building property nomMA
21:04:30 [main] Ejb3Column[DEBUG] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(apprentissage), mappingColumn=prenomMA, insertable=true, updatable=true, unique=false}
21:04:30 [main] PropertyBinder[DEBUG] - MetadataSourceProcessor property prenomMA with lazy=false
21:04:30 [main] AbstractPropertyHolder[DEBUG] - Attempting to locate auto-apply AttributeConverter for property [com.dauphine.domain.Apprentissage:prenomMA]
21:04:30 [main] SimpleValueBinder[DEBUG] - building SimpleValue for prenomMA
21:04:30 [main] PropertyBinder[DEBUG] - Building property prenomMA
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for id
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for adresse
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for nom
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for id
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for nom
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for prenom
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for apprentiId
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for entrepriseId
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for nomMA
21:04:30 [main] SimpleValueBinder[DEBUG] - Starting fillSimpleValue for prenomMA
21:04:30 [main] PrimaryKey[DEBUG] - Forcing column [entreprise_id] to be non-null as it is part of the primary key for table [entreprise]
21:04:30 [main] PrimaryKey[DEBUG] - Forcing column [apprenti_id] to be non-null as it is part of the primary key for table [apprenti]
21:04:30 [main] PrimaryKey[DEBUG] - Forcing column [apprenti_id] to be non-null as it is part of the primary key for table [apprentissage]
21:04:30 [main] PrimaryKey[DEBUG] - Forcing column [entreprise_id] to be non-null as it is part of the primary key for table [apprentissage]
21:04:30 [main] CollectionSecondPass[DEBUG] - Second pass for collection: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] CollectionBinder[DEBUG] - Binding a OneToMany: com.dauphine.domain.Entreprise.apprentissages through a foreign key
21:04:30 [main] CollectionBinder[DEBUG] - Mapping collection: com.dauphine.domain.Entreprise.apprentissages -> apprentissage
21:04:30 [main] TableBinder[DEBUG] - Retrieving property com.dauphine.domain.Apprentissage.entreprise
21:04:30 [main] CollectionSecondPass[DEBUG] - Mapped collection key: entreprise_id, one-to-many: com.dauphine.domain.Apprentissage
21:04:30 [main] PropertyBinder[DEBUG] - Building property apprentissage
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Processing association property references
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Resolving reference to class: com.dauphine.domain.Apprenti
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Resolving reference to class: com.dauphine.domain.Entreprise
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Processing association property references
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Resolving reference to class: com.dauphine.domain.Apprenti
21:04:30 [main] InFlightMetadataCollectorImpl[DEBUG] - Resolving reference to class: com.dauphine.domain.Entreprise
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Apprentissage] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Apprentissage
21:04:30 [main] SessionFactoryImpl[DEBUG] - Building session factory
21:04:30 [main] Settings[DEBUG] - SessionFactory name : null
21:04:30 [main] Settings[DEBUG] - Automatic flush during beforeCompletion(): enabled
21:04:30 [main] Settings[DEBUG] - Automatic session close at end of transaction: disabled
21:04:30 [main] Settings[DEBUG] - Statistics: disabled
21:04:30 [main] Settings[DEBUG] - Deleted entity synthetic identifier rollback: disabled
21:04:30 [main] Settings[DEBUG] - Default entity-mode: pojo
21:04:30 [main] Settings[DEBUG] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
21:04:30 [main] Settings[DEBUG] - Allow initialization of lazy state outside session : disabled
21:04:30 [main] Settings[DEBUG] - Using BatchFetchStyle : LEGACY
21:04:30 [main] Settings[DEBUG] - Default batch fetch size: -1
21:04:30 [main] Settings[DEBUG] - Maximum outer join fetch depth: null
21:04:30 [main] Settings[DEBUG] - Default null ordering: NONE
21:04:30 [main] Settings[DEBUG] - Order SQL updates by primary key: disabled
21:04:30 [main] Settings[DEBUG] - Order SQL inserts for batching: disabled
21:04:30 [main] Settings[DEBUG] - multi-tenancy strategy : NONE
21:04:30 [main] Settings[DEBUG] - JTA Track by Thread: enabled
21:04:30 [main] Settings[DEBUG] - Query language substitutions: {}
21:04:30 [main] Settings[DEBUG] - JPA query language strict compliance: disabled
21:04:30 [main] Settings[DEBUG] - Named query checking : enabled
21:04:30 [main] Settings[DEBUG] - Second-level cache: enabled
21:04:30 [main] Settings[DEBUG] - Second-level query cache: disabled
21:04:30 [main] Settings[DEBUG] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4331d187
21:04:30 [main] Settings[DEBUG] - Second-level cache region prefix: null
21:04:30 [main] Settings[DEBUG] - Optimize second-level cache for minimal puts: disabled
21:04:30 [main] Settings[DEBUG] - Structured second-level cache entries: disabled
21:04:30 [main] Settings[DEBUG] - Second-level cache direct-reference entries: disabled
21:04:30 [main] Settings[DEBUG] - Automatic eviction of collection cache: disabled
21:04:30 [main] Settings[DEBUG] - JDBC batch size: 15
21:04:30 [main] Settings[DEBUG] - JDBC batch updates for versioned data: enabled
21:04:30 [main] Settings[DEBUG] - Scrollable result sets: enabled
21:04:30 [main] Settings[DEBUG] - Wrap result sets: disabled
21:04:30 [main] Settings[DEBUG] - JDBC3 getGeneratedKeys(): enabled
21:04:30 [main] Settings[DEBUG] - JDBC result set fetch size: null
21:04:30 [main] Settings[DEBUG] - Connection release mode: AFTER_TRANSACTION
21:04:30 [main] Settings[DEBUG] - Generate SQL with comments: disabled
21:04:30 [main] SessionFactoryImpl[DEBUG] - Session factory constructed with filter configurations : {}
21:04:30 [main] SessionFactoryImpl[DEBUG] - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;D:\Supremad\Documents\TMP\PersistanceHibernate\target\classes;D:\Supremad\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Supremad\.m2\repository\org\postgresql\postgresql\9.4.1212\postgresql-9.4.1212.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-core\5.2.8.Final\hibernate-core-5.2.8.Final.jar;D:\Supremad\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\Supremad\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\Supremad\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\Supremad\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\Supremad\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\Supremad\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\Supremad\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\Supremad\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Supremad\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar;D:\Supremad\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\Supremad\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;D:\Supremad\.m2\repository\org\slf4j\slf4j-api\1.5.8\slf4j-api-1.5.8.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.5\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, os.name=Windows 10, java.vm.specification.version=1.8, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.dauphine.App 2, sun.cpu.endian=little, user.home=C:\Users\Supremad, user.language=fr, idea.launcher.port=7533, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_66\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_66-b17, user.name=Supremad, path.separator=;, hibernate.connection.username=postgres, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:postgresql://localhost:5432/persistance, hibernate.ejb.persistenceUnitName=PersistancePostgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Supremad\AppData\Local\Temp\, idea.launcher.bin.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.3.5\bin, java.version=1.8.0_66, user.dir=D:\Supremad\Documents\TMP\PersistanceHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ed242a4, java.library.path=C:\Program Files\Java\jdk1.8.0_66\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\System32;C:\Program Files (x86)\OpenVPN\bin;D:\Program Files (x86)\Druide\Antidote 9\Application\Bin64\;D:\Program Files (x86)\Druide\Antidote 9\Application\Bin32\;C:\Users\Supremad\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\WINDOWS\System32\Wbem;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Python27;C:\Program Files\Python35;C:\Program Files\Python35\Scripts;D:\spark-2.1.0-bin-hadoop2.7\python\pyspark;C:\Program Files\R\R-3.3.1\bin\x64;C:\Program Files\Java\jdk1.8.0_66\bin;C:\ProgramData\Oracle\Java\javapath;D:\Program Files (x86)\apache-maven-3.3.9\bin;D:\Program Files (x86)\scala\bin;D:\Program Files (x86)\sbt\bin;D:\Supremad\Android\sdk\platform-tools;D:\Supremad\Android\sdk\tools;D:\hadoop-2.7.3\bin;D:\spark-2.1.0-bin-hadoop2.7\bin;C:\Users\Supremad\AppData\Roaming\npm;C:\Users\Supremad\AppData\Local\atom\bin;D:\Program Files\MongoDB\Server\3.2\bin;D:\Program Files (x86)\Microsoft VS Code\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.66-b17, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
21:04:30 [main] JaccIntegrator[DEBUG] - Skipping JACC integration as it was not enabled
21:04:30 [main] CascadeStyles[DEBUG] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
21:04:30 [main] SessionFactoryImpl[DEBUG] - Instantiated session factory
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Entreprise] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Entreprise
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Entreprise] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Entreprise
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Apprenti] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Apprenti
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Apprenti] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Apprenti
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - Not known whether passed class name [com.dauphine.domain.Apprentissage] is safe
21:04:30 [main] ClassLoaderAccessImpl[DEBUG] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dauphine.domain.Apprentissage
21:04:30 [main] AbstractCollectionPersister[DEBUG] - Static SQL for collection: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] AbstractCollectionPersister[DEBUG] -  Row insert: update apprentissage set entreprise_id=? where apprenti_id=? and entreprise_id=?
21:04:30 [main] AbstractCollectionPersister[DEBUG] -  Row update: update apprentissage set  where apprenti_id=? and entreprise_id=?
21:04:30 [main] AbstractCollectionPersister[DEBUG] -  Row delete: update apprentissage set entreprise_id=null where entreprise_id=? and apprenti_id=?
21:04:30 [main] AbstractCollectionPersister[DEBUG] -  One-shot delete: update apprentissage set entreprise_id=null where entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] - Static SQL for entity: com.dauphine.domain.Entreprise
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Version select: select entreprise_id from entreprise where entreprise_id =?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Snapshot select: select entreprise_.entreprise_id, entreprise_.adresse as adresse2_2_, entreprise_.nom as nom3_2_ from entreprise entreprise_ where entreprise_.entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Insert 0: insert into entreprise (adresse, nom, entreprise_id) values (?, ?, ?)
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Update 0: update entreprise set adresse=?, nom=? where entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Delete 0: delete from entreprise where entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Identity insert: insert into entreprise (adresse, nom) values (?, ?)
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed3068a]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4678a2eb]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@40f1be1b]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [NONE]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25748410]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b43529a]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4264b240]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [READ]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b04476e]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bb75258]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c260bdc]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@75e01201]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [UPGRADE]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2783717b]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a335fa8]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f363cf5]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3829ac1]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [UPGRADE_NOWAIT]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baf352a]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15eebbff]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6f11]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30990c1b]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [UPGRADE_SKIPLOCKED]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2453f95d]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dbe250d]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553f1d75]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e1d8f9e]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [FORCE]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e34ace1]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f071df8]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de41af9]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@56ace400]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [PESSIMISTIC_READ]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for share
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47404bea]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d018107]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbcf243]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@29e6eb25]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [PESSIMISTIC_WRITE]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62435e70]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38be305c]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269f4bad]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5ed731d0]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [PESSIMISTIC_FORCE_INCREMENT]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3234f74e]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@275fe372]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e10ff8]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@557a1e2d]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [OPTIMISTIC]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a4842b]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissages
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@366ef90e]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e01298]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@31e75d13]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Entreprise)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:0>, path=com.dauphine.domain.Entreprise)
          - CollectionAttributeFetchImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:1>, path=com.dauphine.domain.Entreprise.apprentissages)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:2>, path=com.dauphine.domain.Entreprise.apprentissages.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Entreprise)
          - SQL table alias mapping - entreprise0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri1_2_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Entreprise [OPTIMISTIC_FORCE_INCREMENT]: select entreprise0_.entreprise_id as entrepri1_2_0_, entreprise0_.adresse as adresse2_2_0_, entreprise0_.nom as nom3_2_0_ from entreprise entreprise0_ where entreprise0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_MERGE on entity com.dauphine.domain.Entreprise: select entreprise0_.entreprise_id as entrepri1_2_1_, entreprise0_.adresse as adresse2_2_1_, entreprise0_.nom as nom3_2_1_, apprentiss1_.entreprise_id as entrepri2_1_3_, apprentiss1_.apprenti_id as apprenti1_1_3_, apprentiss1_.apprenti_id as apprenti1_1_0_, apprentiss1_.entreprise_id as entrepri2_1_0_, apprentiss1_.nomMA as nomMA3_1_0_, apprentiss1_.prenomMA as prenomMA4_1_0_ from entreprise entreprise0_ left outer join apprentissage apprentiss1_ on entreprise0_.entreprise_id=apprentiss1_.entreprise_id where entreprise0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_REFRESH on entity com.dauphine.domain.Entreprise: select entreprise0_.entreprise_id as entrepri1_2_1_, entreprise0_.adresse as adresse2_2_1_, entreprise0_.nom as nom3_2_1_, apprentiss1_.entreprise_id as entrepri2_1_3_, apprentiss1_.apprenti_id as apprenti1_1_3_, apprentiss1_.apprenti_id as apprenti1_1_0_, apprentiss1_.entreprise_id as entrepri2_1_0_, apprentiss1_.nomMA as nomMA3_1_0_, apprentiss1_.prenomMA as prenomMA4_1_0_ from entreprise entreprise0_ left outer join apprentissage apprentiss1_ on entreprise0_.entreprise_id=apprentiss1_.entreprise_id where entreprise0_.entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] - Static SQL for entity: com.dauphine.domain.Apprenti
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Version select: select apprenti_id from apprenti where apprenti_id =?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Snapshot select: select apprenti_.apprenti_id, apprenti_.nom as nom2_0_, apprenti_.premom as premom3_0_ from apprenti apprenti_ where apprenti_.apprenti_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Insert 0: insert into apprenti (nom, premom, apprenti_id) values (?, ?, ?)
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Update 0: update apprenti set nom=?, premom=? where apprenti_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Delete 0: delete from apprenti where apprenti_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Identity insert: insert into apprenti (nom, premom) values (?, ?)
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2756c0a7]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69637b10]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5536379e]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.apprenti
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprentissage.apprenti
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50eca7c6]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprentissage.entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
             - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprenti.apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}
          - JOIN (JoinDefinedByMetadata(apprentissage)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dauphine.domain.Apprentissage)
                - SQL table alias mapping - apprentiss1_
                - alias suffix - 1_
                - suffixed key columns - {apprenti1_1_1_, entrepri2_1_1_}
                - JOIN (JoinDefinedByMetadata(id)) : <gen:1> -> <gen:1>-id
                   - CompositeQuerySpaceImpl(uid=<gen:1>-id)
                      - SQL table alias mapping - apprentiss1_
                - JOIN (JoinDefinedByMetadata(entreprise)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dauphine.domain.Entreprise)
                      - SQL table alias mapping - entreprise2_
                      - alias suffix - 2_
                      - suffixed key columns - {entrepri1_2_2_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [NONE]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_, apprentiss1_.apprenti_id as apprenti1_1_1_, apprentiss1_.entreprise_id as entrepri2_1_1_, apprentiss1_.nomMA as nomMA3_1_1_, apprentiss1_.prenomMA as prenomMA4_1_1_, entreprise2_.entreprise_id as entrepri1_2_2_, entreprise2_.adresse as adresse2_2_2_, entreprise2_.nom as nom3_2_2_ from apprenti apprenti0_ left outer join apprentissage apprentiss1_ on apprenti0_.apprenti_id=apprentiss1_.apprenti_id left outer join entreprise entreprise2_ on apprentiss1_.entreprise_id=entreprise2_.entreprise_id where apprenti0_.apprenti_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de5f0ef]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d6290]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ca0256d]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.apprenti
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprentissage.apprenti
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51850751]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprentissage.entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.entreprise.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage.prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
             - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprenti.apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}
          - JOIN (JoinDefinedByMetadata(apprentissage)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dauphine.domain.Apprentissage)
                - SQL table alias mapping - apprentiss1_
                - alias suffix - 1_
                - suffixed key columns - {apprenti1_1_1_, entrepri2_1_1_}
                - JOIN (JoinDefinedByMetadata(id)) : <gen:1> -> <gen:1>-id
                   - CompositeQuerySpaceImpl(uid=<gen:1>-id)
                      - SQL table alias mapping - apprentiss1_
                - JOIN (JoinDefinedByMetadata(entreprise)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dauphine.domain.Entreprise)
                      - SQL table alias mapping - entreprise2_
                      - alias suffix - 2_
                      - suffixed key columns - {entrepri1_2_2_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [READ]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_, apprentiss1_.apprenti_id as apprenti1_1_1_, apprentiss1_.entreprise_id as entrepri2_1_1_, apprentiss1_.nomMA as nomMA3_1_1_, apprentiss1_.prenomMA as prenomMA4_1_1_, entreprise2_.entreprise_id as entrepri1_2_2_, entreprise2_.adresse as adresse2_2_2_, entreprise2_.nom as nom3_2_2_ from apprenti apprenti0_ left outer join apprentissage apprentiss1_ on apprenti0_.apprenti_id=apprentiss1_.apprenti_id left outer join entreprise entreprise2_ on apprentiss1_.entreprise_id=entreprise2_.entreprise_id where apprenti0_.apprenti_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64df9a61]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e260766]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2c3dec30]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [UPGRADE]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a97744]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c56e013]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fc9dfc5]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [UPGRADE_NOWAIT]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40258c2f]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6731787b]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@16f7b4af]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [UPGRADE_SKIPLOCKED]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a1d21f]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c60324]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71ae31b0]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [FORCE]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba534b0]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c104774]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2cb3d0f7]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [PESSIMISTIC_READ]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for share
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e517165]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a66a204]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5860f3d7]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [PESSIMISTIC_WRITE]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7f7be7]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddae9b5]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@427b5f92]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [PESSIMISTIC_FORCE_INCREMENT]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24bdb479]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34625ccd]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2c7d121c]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [OPTIMISTIC]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65aa6596]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentissage
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419a20a6]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@533377b]
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprenti)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprenti.apprentissage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprenti)
          - SQL table alias mapping - apprenti0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_0_0_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprenti [OPTIMISTIC_FORCE_INCREMENT]: select apprenti0_.apprenti_id as apprenti1_0_0_, apprenti0_.nom as nom2_0_0_, apprenti0_.premom as premom3_0_0_ from apprenti apprenti0_ where apprenti0_.apprenti_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_MERGE on entity com.dauphine.domain.Apprenti: select apprenti0_.apprenti_id as apprenti1_0_1_, apprenti0_.nom as nom2_0_1_, apprenti0_.premom as premom3_0_1_, apprentiss1_.apprenti_id as apprenti1_1_0_, apprentiss1_.entreprise_id as entrepri2_1_0_, apprentiss1_.nomMA as nomMA3_1_0_, apprentiss1_.prenomMA as prenomMA4_1_0_ from apprenti apprenti0_ left outer join apprentissage apprentiss1_ on apprenti0_.apprenti_id=apprentiss1_.apprenti_id where apprenti0_.apprenti_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_REFRESH on entity com.dauphine.domain.Apprenti: select apprenti0_.apprenti_id as apprenti1_0_1_, apprenti0_.nom as nom2_0_1_, apprenti0_.premom as premom3_0_1_, apprentiss1_.apprenti_id as apprenti1_1_0_, apprentiss1_.entreprise_id as entrepri2_1_0_, apprentiss1_.nomMA as nomMA3_1_0_, apprentiss1_.prenomMA as prenomMA4_1_0_ from apprenti apprenti0_ left outer join apprentissage apprentiss1_ on apprenti0_.apprenti_id=apprentiss1_.apprenti_id where apprenti0_.apprenti_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] - Static SQL for entity: com.dauphine.domain.Apprentissage
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Version select: select apprenti_id, entreprise_id from apprentissage where apprenti_id =? and entreprise_id =?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Snapshot select: select apprentiss_.apprenti_id, apprentiss_.entreprise_id, apprentiss_.nomMA as nomMA3_1_, apprentiss_.prenomMA as prenomMA4_1_ from apprentissage apprentiss_ where apprentiss_.apprenti_id=? and apprentiss_.entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Insert 0: insert into apprentissage (nomMA, prenomMA, apprenti_id, entreprise_id) values (?, ?, ?, ?)
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Update 0: update apprentissage set nomMA=?, prenomMA=? where apprenti_id=? and entreprise_id=?
21:04:30 [main] AbstractEntityPersister[DEBUG] -  Delete 0: delete from apprentissage where apprenti_id=? and entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3383649e]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@10fde30a]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346939bf]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58670130]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_
          - JOIN (JoinDefinedByMetadata(apprenti)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dauphine.domain.Apprenti)
                - SQL table alias mapping - apprenti1_
                - alias suffix - 1_
                - suffixed key columns - {apprenti1_0_1_}
          - JOIN (JoinDefinedByMetadata(entreprise)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dauphine.domain.Entreprise)
                - SQL table alias mapping - entreprise2_
                - alias suffix - 2_
                - suffixed key columns - {entrepri1_2_2_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [NONE]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_, apprenti1_.apprenti_id as apprenti1_0_1_, apprenti1_.nom as nom2_0_1_, apprenti1_.premom as premom3_0_1_, entreprise2_.entreprise_id as entrepri1_2_2_, entreprise2_.adresse as adresse2_2_2_, entreprise2_.nom as nom3_2_2_ from apprentissage apprentiss0_ inner join apprenti apprenti1_ on apprentiss0_.apprenti_id=apprenti1_.apprenti_id inner join entreprise entreprise2_ on apprentiss0_.entreprise_id=entreprise2_.entreprise_id where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39dcf4b0]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e4de19b]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18518ccf]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@768ccdc5]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.adresse
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : entreprise.apprentissages
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_
          - JOIN (JoinDefinedByMetadata(apprenti)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dauphine.domain.Apprenti)
                - SQL table alias mapping - apprenti1_
                - alias suffix - 1_
                - suffixed key columns - {apprenti1_0_1_}
          - JOIN (JoinDefinedByMetadata(entreprise)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dauphine.domain.Entreprise)
                - SQL table alias mapping - entreprise2_
                - alias suffix - 2_
                - suffixed key columns - {entrepri1_2_2_}

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [READ]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_, apprenti1_.apprenti_id as apprenti1_0_1_, apprenti1_.nom as nom2_0_1_, apprenti1_.premom as premom3_0_1_, entreprise2_.entreprise_id as entrepri1_2_2_, entreprise2_.adresse as adresse2_2_2_, entreprise2_.nom as nom3_2_2_ from apprentissage apprentiss0_ inner join apprenti apprenti1_ on apprentiss0_.apprenti_id=apprenti1_.apprenti_id inner join entreprise entreprise2_ on apprentiss0_.entreprise_id=entreprise2_.entreprise_id where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10650953]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@659eef7]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9f0a20]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55787112]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [UPGRADE]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd201a8]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7db82169]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3276732]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f28bd56]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [UPGRADE_NOWAIT]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e3250d]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@19fe4644]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7383eae2]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18245eb0]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [UPGRADE_SKIPLOCKED]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7d3c46]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@24fb6a80]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6722db6e]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18f20260]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [FORCE]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae33a11]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7a48e6e2]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5049d8b2]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0b5baf]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [PESSIMISTIC_READ]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for share
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@631e06ab]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a3591c5]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107ed6fc]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1643d68f]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [PESSIMISTIC_WRITE]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186978a6]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e029d61]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@132ddbab]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297ea53a]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [PESSIMISTIC_FORCE_INCREMENT]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=? for update nowait 
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb0951]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5bf22f18]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28276e50]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e70ea3]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [OPTIMISTIC]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3efe7086]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@675d8c96]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63648ee9]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d6972f]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(entity=com.dauphine.domain.Apprentissage)
    - Returns
       - EntityReturnImpl(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:0>, path=com.dauphine.domain.Apprentissage)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:1>, path=com.dauphine.domain.Apprentissage.apprenti)
          - EntityAttributeFetchImpl(entity=com.dauphine.domain.Entreprise, querySpaceUid=<gen:2>, path=com.dauphine.domain.Apprentissage.entreprise)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dauphine.domain.Apprentissage)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {apprenti1_1_0_, entrepri2_1_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - apprentiss0_

21:04:30 [main] EntityLoader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [OPTIMISTIC_FORCE_INCREMENT]: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_MERGE on entity com.dauphine.domain.Apprentissage: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Static select for action ACTION_REFRESH on entity com.dauphine.domain.Apprentissage: select apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.nomMA as nomMA3_1_0_, apprentiss0_.prenomMA as prenomMA4_1_0_ from apprentissage apprentiss0_ where apprentiss0_.apprenti_id=? and apprentiss0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Static select for entity com.dauphine.domain.Apprentissage [NONE]: select apprentiss0_.apprenti_id as apprenti1_1_2_, apprentiss0_.entreprise_id as entrepri2_1_2_, apprentiss0_.nomMA as nomMA3_1_2_, apprentiss0_.prenomMA as prenomMA4_1_2_, apprenti1_.apprenti_id as apprenti1_0_0_, apprenti1_.nom as nom2_0_0_, apprenti1_.premom as premom3_0_0_, entreprise2_.entreprise_id as entrepri1_2_1_, entreprise2_.adresse as adresse2_2_1_, entreprise2_.nom as nom3_2_1_ from apprentissage apprentiss0_ inner join apprenti apprenti1_ on apprentiss0_.apprenti_id=apprenti1_.apprenti_id inner join entreprise entreprise2_ on apprentiss0_.entreprise_id=entreprise2_.entreprise_id where apprentiss0_.apprenti_id=?
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68759011]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e242b4d]
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:1>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@305f031]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprentiId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entrepriseId
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti
21:04:30 [main] QuerySpacesImpl[DEBUG] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ebea12c]
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.nom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.prenom
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : apprenti.apprentissage
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : entreprise
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Property path deemed to be circular : entreprise
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : nomMA
21:04:30 [main] MetamodelGraphWalker[DEBUG] - Visiting attribute path : prenomMA
21:04:30 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy[DEBUG] - Building LoadPlan...
21:04:30 [main] LoadQueryJoinAndFetchProcessor[DEBUG] - processing queryspace <gen:0>
21:04:30 [main] LoadPlanTreePrinter[DEBUG] - LoadPlan(collection=com.dauphine.domain.Entreprise.apprentissages)
    - Returns
       - CollectionReturnImpl(collection=com.dauphine.domain.Entreprise.apprentissages, querySpaceUid=<gen:0>, path=[com.dauphine.domain.Entreprise.apprentissages])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.dauphine.domain.Apprentissage, querySpaceUid=<gen:1>, path=[com.dauphine.domain.Entreprise.apprentissages].<elements>)
             - EntityAttributeFetchImpl(entity=com.dauphine.domain.Apprenti, querySpaceUid=<gen:2>, path=[com.dauphine.domain.Entreprise.apprentissages].<elements>.apprenti)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.dauphine.domain.Entreprise.apprentissages)
          - SQL table alias mapping - apprentiss0_
          - alias suffix - 0_
          - suffixed key columns - {entrepri2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - apprenti1_1_1_, entrepri2_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dauphine.domain.Apprentissage)
                - SQL table alias mapping - apprentiss0_
                - alias suffix - 1_
                - suffixed key columns - {apprenti1_1_1_, entrepri2_1_1_}
                - JOIN (JoinDefinedByMetadata(id)) : <gen:1> -> <gen:1>-id
                   - CompositeQuerySpaceImpl(uid=<gen:1>-id)
                      - SQL table alias mapping - apprentiss0_
                - JOIN (JoinDefinedByMetadata(apprenti)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dauphine.domain.Apprenti)
                      - SQL table alias mapping - apprenti1_
                      - alias suffix - 2_
                      - suffixed key columns - {apprenti1_0_2_}

21:04:30 [main] CollectionLoader[DEBUG] - Static select for collection com.dauphine.domain.Entreprise.apprentissages: select apprentiss0_.entreprise_id as entrepri2_1_0_, apprentiss0_.apprenti_id as apprenti1_1_0_, apprentiss0_.apprenti_id as apprenti1_1_1_, apprentiss0_.entreprise_id as entrepri2_1_1_, apprentiss0_.nomMA as nomMA3_1_1_, apprentiss0_.prenomMA as prenomMA4_1_1_, apprenti1_.apprenti_id as apprenti1_0_2_, apprenti1_.nom as nom2_0_2_, apprenti1_.premom as premom3_0_2_ from apprentissage apprentiss0_ inner join apprenti apprenti1_ on apprentiss0_.apprenti_id=apprenti1_.apprenti_id where apprentiss0_.entreprise_id=?
21:04:30 [main] access[INFO] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e46d9f4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
21:04:30 [main] Table[DEBUG] - No alter strings for table : apprenti
21:04:30 [main] Table[DEBUG] - No alter strings for table : apprentissage
21:04:30 [main] Table[DEBUG] - No alter strings for table : entreprise
21:04:30 [main] JtaPlatformInitiator[DEBUG] - No JtaPlatform was specified, checking resolver
21:04:30 [main] JtaPlatformResolverInitiator[DEBUG] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
21:04:30 [main] StandardJtaPlatformResolver[DEBUG] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
21:04:30 [main] NamedQueryRepository[DEBUG] - Checking 0 named HQL queries
21:04:30 [main] NamedQueryRepository[DEBUG] - Checking 0 named SQL queries
21:04:30 [main] SessionFactoryRegistry[DEBUG] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64da2a7
21:04:30 [main] SessionFactoryRegistry[DEBUG] - Registering SessionFactory: 5a792fd7-6227-4661-bf45-475159f0f4d7 (<unnamed>)
21:04:30 [main] SessionFactoryRegistry[DEBUG] - Not binding SessionFactory to JNDI, no JNDI name configured
21:04:30 [main] StatisticsInitiator[DEBUG] - Statistics initialized [enabled=false]
21:04:30 [main] App[INFO] - Start running...
21:04:30 [main] App[INFO] - Trying case n°2
21:04:30 [main] SQL[DEBUG] - 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
Hibernate: 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #0
21:04:30 [main] EntityReferenceInitializerImpl[DEBUG] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprenti#1]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprenti#1]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Entreprise#1]
21:04:30 [main] AbstractLoadPlanBasedCollectionInitializer[DEBUG] - Loading collection: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] SQL[DEBUG] - 
    select
        apprentiss0_.entreprise_id as entrepri2_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_1_,
        apprentiss0_.entreprise_id as entrepri2_1_1_,
        apprentiss0_.nomMA as nomMA3_1_1_,
        apprentiss0_.prenomMA as prenomMA4_1_1_,
        apprenti1_.apprenti_id as apprenti1_0_2_,
        apprenti1_.nom as nom2_0_2_,
        apprenti1_.premom as premom3_0_2_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    where
        apprentiss0_.entreprise_id=?
Hibernate: 
    select
        apprentiss0_.entreprise_id as entrepri2_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_1_,
        apprentiss0_.entreprise_id as entrepri2_1_1_,
        apprentiss0_.nomMA as nomMA3_1_1_,
        apprentiss0_.prenomMA as prenomMA4_1_1_,
        apprenti1_.apprenti_id as apprenti1_0_2_,
        apprenti1_.nom as nom2_0_2_,
        apprenti1_.premom as premom3_0_2_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    where
        apprentiss0_.entreprise_id=?
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Preparing collection intializer : [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #0
21:04:30 [main] CollectionReferenceInitializerImpl[DEBUG] - Found row of collection: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #1
21:04:30 [main] CollectionReferenceInitializerImpl[DEBUG] - Found row of collection: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #2
21:04:30 [main] CollectionReferenceInitializerImpl[DEBUG] - Found row of collection: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprenti#3]
21:04:30 [main] Loader[DEBUG] - Loading entity: [com.dauphine.domain.Apprentissage#3]
21:04:30 [main] SQL[DEBUG] - 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
Hibernate: 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
21:04:30 [main] Loader[DEBUG] - Result set row: 0
21:04:30 [main] Loader[DEBUG] - Result row: EntityKey[com.dauphine.domain.Apprenti#3], EntityKey[com.dauphine.domain.Entreprise#1], EntityKey[com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}]
21:04:30 [main] Loader[DEBUG] - Done entity load
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprenti#3]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprenti#4]
21:04:30 [main] Loader[DEBUG] - Loading entity: [com.dauphine.domain.Apprentissage#4]
21:04:30 [main] SQL[DEBUG] - 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
Hibernate: 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
21:04:30 [main] Loader[DEBUG] - Result set row: 0
21:04:30 [main] Loader[DEBUG] - Result row: EntityKey[com.dauphine.domain.Apprenti#4], EntityKey[com.dauphine.domain.Entreprise#1], EntityKey[com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}]
21:04:30 [main] Loader[DEBUG] - Done entity load
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprenti#4]
21:04:30 [main] CollectionLoadContext[DEBUG] - 1 collections were found in result set for role: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] CollectionLoadContext[DEBUG] - Collection fully initialized: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] CollectionLoadContext[DEBUG] - 1 collections initialized for role: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] ResourceRegistryStandardImpl[DEBUG] - HHH000387: ResultSet's statement was not registered
21:04:30 [main] AbstractLoadPlanBasedCollectionInitializer[DEBUG] - Done loading collection
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Entreprise#1]
21:04:30 [main] ResourceRegistryStandardImpl[DEBUG] - HHH000387: ResultSet's statement was not registered
21:04:30 [main] AbstractLoadPlanBasedEntityLoader[DEBUG] - Done entity load : com.dauphine.domain.Apprenti#1
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprenti [id=1, nom=Belgacem, prenom=Adam]
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Entreprise [id=1, nom=Banque de France, adresse=Paris]
21:04:30 [main] App[INFO] - [Count Apprentissage] Java = 3
21:04:30 [main] QueryTranslatorFactoryInitiator[DEBUG] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@30c0ccff
21:04:30 [main] QueryTranslatorFactoryInitiator[INFO] - HHH000397: Using ASTQueryTranslatorFactory
21:04:30 [main] QueryTranslatorImpl[DEBUG] - parse() - HQL: select count(*) from com.dauphine.domain.Apprentissage where entreprise.id =:id
21:04:30 [main] QueryTranslatorImpl[DEBUG] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'dauphine'
    |  |        |  \-[IDENT] Node: 'domain'
    |  |        \-[IDENT] Node: 'Apprentissage'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'entreprise'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

21:04:30 [main] ErrorCounter[DEBUG] - throwQueryException() : no errors
21:04:30 [main] HqlSqlBaseWalker[DEBUG] - select << begin [level=1, statement=select]
21:04:30 [main] FromElement[DEBUG] - FromClause{level=1} : com.dauphine.domain.Apprentissage (<no alias>) -> apprentiss0_
21:04:30 [main] FromReferenceNode[DEBUG] - Resolved : {synthetic-alias} -> {synthetic-alias}
21:04:30 [main] DotNode[DEBUG] - getDataType() : entreprise -> org.hibernate.type.ManyToOneType(com.dauphine.domain.Entreprise)
21:04:30 [main] DotNode[DEBUG] - dereferenceShortcut() : property id in com.dauphine.domain.Apprentissage does not require a join.
21:04:30 [main] DotNode[DEBUG] - Unresolved property path is now 'entreprise.id'
21:04:30 [main] FromReferenceNode[DEBUG] - Resolved : {synthetic-alias}.entreprise -> apprentiss0_.entreprise_id
21:04:30 [main] DotNode[DEBUG] - getDataType() : entreprise.id -> org.hibernate.type.IntegerType@103f852
21:04:30 [main] FromReferenceNode[DEBUG] - Resolved : {synthetic-alias}.entreprise.id -> apprentiss0_.entreprise_id
21:04:30 [main] HqlSqlBaseWalker[DEBUG] - select : finishing up [level=1, statement=select]
21:04:30 [main] HqlSqlWalker[DEBUG] - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} apprentissage apprentiss0_ ) ( where ( = ( apprentiss0_.entreprise_id ( apprentiss0_.entreprise_id {synthetic-alias} entreprise ) id ) ? ) ) )
21:04:30 [main] JoinProcessor[DEBUG] - Using FROM fragment [apprentissage apprentiss0_]
21:04:30 [main] HqlSqlBaseWalker[DEBUG] - select >> end [level=1, statement=select]
21:04:30 [main] QueryTranslatorImpl[DEBUG] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (apprentissage)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[apprentiss0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'apprentissage apprentiss0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=apprentissage,tableAlias=apprentiss0_,origin=null,columns={,className=com.dauphine.domain.Apprentissage}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'apprentiss0_.entreprise_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=entreprise.id,path={synthetic-alias}.entreprise.id,tableAlias=apprentiss0_,className=com.dauphine.domain.Apprentissage,classAlias=null}
          |  +-[DOT] DotNode: 'apprentiss0_.entreprise_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=entreprise.id,path={synthetic-alias}.entreprise,tableAlias=apprentiss0_,className=com.dauphine.domain.Apprentissage,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'entreprise' {originalText=entreprise}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@103f852}

21:04:30 [main] ErrorCounter[DEBUG] - throwQueryException() : no errors
21:04:30 [main] QueryTranslatorImpl[DEBUG] - HQL: select count(*) from com.dauphine.domain.Apprentissage where entreprise.id =:id
21:04:30 [main] QueryTranslatorImpl[DEBUG] - SQL: select count(*) as col_0_0_ from apprentissage apprentiss0_ where apprentiss0_.entreprise_id=?
21:04:30 [main] ErrorCounter[DEBUG] - throwQueryException() : no errors
21:04:30 [main] SQL[DEBUG] - 
    select
        count(*) as col_0_0_ 
    from
        apprentissage apprentiss0_ 
    where
        apprentiss0_.entreprise_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        apprentissage apprentiss0_ 
    where
        apprentiss0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Result set row: 0
21:04:30 [main] Loader[DEBUG] - Result row: 
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[INFO] - [Count Apprentissage] API Criteria = 3
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprentissage [Entreprise [id=1, nom=Banque de France, adresse=Paris], Apprenti [id=1, nom=Belgacem, prenom=Adam], MaitreApp [nomMA=Manouvrier, prenomMA=Maude]]
21:04:30 [main] App[DEBUG] - Apprenti test1 = true
21:04:30 [main] App[DEBUG] - Entreprise test1 = true
21:04:30 [main] App[DEBUG] - Apprentissage test1 = false
21:04:30 [main] SQL[DEBUG] - 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
Hibernate: 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #0
21:04:30 [main] EntityReferenceInitializerImpl[DEBUG] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprenti#2]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprenti#2]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Entreprise#2]
21:04:30 [main] AbstractLoadPlanBasedCollectionInitializer[DEBUG] - Loading collection: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:30 [main] SQL[DEBUG] - 
    select
        apprentiss0_.entreprise_id as entrepri2_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_1_,
        apprentiss0_.entreprise_id as entrepri2_1_1_,
        apprentiss0_.nomMA as nomMA3_1_1_,
        apprentiss0_.prenomMA as prenomMA4_1_1_,
        apprenti1_.apprenti_id as apprenti1_0_2_,
        apprenti1_.nom as nom2_0_2_,
        apprenti1_.premom as premom3_0_2_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    where
        apprentiss0_.entreprise_id=?
Hibernate: 
    select
        apprentiss0_.entreprise_id as entrepri2_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_0_,
        apprentiss0_.apprenti_id as apprenti1_1_1_,
        apprentiss0_.entreprise_id as entrepri2_1_1_,
        apprentiss0_.nomMA as nomMA3_1_1_,
        apprentiss0_.prenomMA as prenomMA4_1_1_,
        apprenti1_.apprenti_id as apprenti1_0_2_,
        apprenti1_.nom as nom2_0_2_,
        apprenti1_.premom as premom3_0_2_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    where
        apprentiss0_.entreprise_id=?
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Preparing collection intializer : [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #0
21:04:30 [main] CollectionReferenceInitializerImpl[DEBUG] - Found row of collection: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:30 [main] ResultSetProcessorImpl[DEBUG] - Starting ResultSet row #1
21:04:30 [main] CollectionReferenceInitializerImpl[DEBUG] - Found row of collection: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}]
21:04:30 [main] TwoPhaseLoad[DEBUG] - Resolving associations for [com.dauphine.domain.Apprenti#5]
21:04:30 [main] Loader[DEBUG] - Loading entity: [com.dauphine.domain.Apprentissage#5]
21:04:30 [main] SQL[DEBUG] - 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
Hibernate: 
    select
        apprentiss0_.apprenti_id as apprenti1_1_2_,
        apprentiss0_.entreprise_id as entrepri2_1_2_,
        apprentiss0_.nomMA as nomMA3_1_2_,
        apprentiss0_.prenomMA as prenomMA4_1_2_,
        apprenti1_.apprenti_id as apprenti1_0_0_,
        apprenti1_.nom as nom2_0_0_,
        apprenti1_.premom as premom3_0_0_,
        entreprise2_.entreprise_id as entrepri1_2_1_,
        entreprise2_.adresse as adresse2_2_1_,
        entreprise2_.nom as nom3_2_1_ 
    from
        apprentissage apprentiss0_ 
    inner join
        apprenti apprenti1_ 
            on apprentiss0_.apprenti_id=apprenti1_.apprenti_id 
    inner join
        entreprise entreprise2_ 
            on apprentiss0_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprentiss0_.apprenti_id=?
21:04:30 [main] Loader[DEBUG] - Result set row: 0
21:04:30 [main] Loader[DEBUG] - Result row: EntityKey[com.dauphine.domain.Apprenti#5], EntityKey[com.dauphine.domain.Entreprise#2], EntityKey[com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}]
21:04:30 [main] Loader[DEBUG] - Done entity load
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Apprenti#5]
21:04:30 [main] CollectionLoadContext[DEBUG] - 1 collections were found in result set for role: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] CollectionLoadContext[DEBUG] - Collection fully initialized: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:30 [main] CollectionLoadContext[DEBUG] - 1 collections initialized for role: com.dauphine.domain.Entreprise.apprentissages
21:04:30 [main] ResourceRegistryStandardImpl[DEBUG] - HHH000387: ResultSet's statement was not registered
21:04:30 [main] AbstractLoadPlanBasedCollectionInitializer[DEBUG] - Done loading collection
21:04:30 [main] TwoPhaseLoad[DEBUG] - Done materializing entity [com.dauphine.domain.Entreprise#2]
21:04:30 [main] ResourceRegistryStandardImpl[DEBUG] - HHH000387: ResultSet's statement was not registered
21:04:30 [main] AbstractLoadPlanBasedEntityLoader[DEBUG] - Done entity load : com.dauphine.domain.Apprenti#2
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprenti [id=2, nom=Madkour, prenom=Chafiq]
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Entreprise [id=2, nom=Crédit agricole, adresse=Paris]
21:04:30 [main] App[INFO] - [Count Apprentissage] Java = 2
21:04:30 [main] SQL[DEBUG] - 
    select
        count(*) as col_0_0_ 
    from
        apprentissage apprentiss0_ 
    where
        apprentiss0_.entreprise_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        apprentissage apprentiss0_ 
    where
        apprentiss0_.entreprise_id=?
21:04:30 [main] Loader[DEBUG] - Result set row: 0
21:04:30 [main] Loader[DEBUG] - Result row: 
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[INFO] - [Count Apprentissage] API Criteria = 2
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprentissage [Entreprise [id=2, nom=Crédit agricole, adresse=Paris], Apprenti [id=2, nom=Madkour, prenom=Chafiq], MaitreApp [nomMA=Mahjoub, prenomMA=Ridha]]
21:04:30 [main] App[DEBUG] - Apprenti test2 = true
21:04:30 [main] App[DEBUG] - Entreprise test2 = true
21:04:30 [main] App[DEBUG] - Apprentissage test2 = false
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprenti [id=3, nom=Darmery, prenom=Jean]
21:04:30 [main] App[DEBUG] - Entreprise test3 = true
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] App[DEBUG] - Apprenti [id=4, nom=Doeuf, prenom=John]
21:04:30 [main] App[DEBUG] - Entreprise test4 = true
21:04:30 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:30 [main] TransactionImpl[DEBUG] - begin
21:04:30 [main] DefaultMergeEventListener[DEBUG] - EntityCopyObserver strategy: disallow
21:04:30 [main] TransactionImpl[DEBUG] - committing
21:04:30 [main] AbstractFlushingEventListener[DEBUG] - Processing flush-time cascades
21:04:30 [main] AbstractFlushingEventListener[DEBUG] - Dirty checking collections
21:04:30 [main] Collections[DEBUG] - Collection found: [com.dauphine.domain.Entreprise.apprentissages#1], was: [<unreferenced>] (initialized)
21:04:30 [main] Collections[DEBUG] - Collection found: [com.dauphine.domain.Entreprise.apprentissages#2], was: [<unreferenced>] (initialized)
21:04:30 [main] Collections[DEBUG] - Collection dereferenced: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:30 [main] Collections[DEBUG] - Collection dereferenced: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Flushed: 0 insertions, 3 updates, 0 deletions to 12 objects
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Flushed: 2 (re)creations, 0 updates, 2 removals to 4 collections
21:04:31 [main] EntityPrinter[DEBUG] - Listing entities:
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=4, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}, nom=Doeuf, prenom=John}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#2, nomMA=Mahjoub, prenomMA=Ridha, id=component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}, apprenti=com.dauphine.domain.Apprenti#2}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=3, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}, nom=D'Armery, prenom=Jean}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#2, nomMA=Carena, prenomMA=Emma, id=component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}, apprenti=com.dauphine.domain.Apprenti#5}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=5, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}, nom=Liz, prenom=Anna}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Carena, prenomMA=Emma, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}, apprenti=com.dauphine.domain.Apprenti#3}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=2, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}, nom=Madkour, prenom=Chafiq}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Entreprise{apprentissages=[], adresse=Paris, id=2, nom=Crédit agricole}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=1, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}, nom=Belgacem, prenom=Adam}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Entreprise{apprentissages=[], adresse=Paris, id=1, nom=Banque de France}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Manouvrier, prenomMA=Maude, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}, apprenti=com.dauphine.domain.Apprenti#1}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Golo, prenomMA=Terry, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}, apprenti=com.dauphine.domain.Apprenti#4}
21:04:31 [main] SQL[DEBUG] - 
    update
        apprenti 
    set
        nom=? 
    where
        apprenti_id=?
Hibernate: 
    update
        apprenti 
    set
        nom=? 
    where
        apprenti_id=?
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] TransactionImpl[DEBUG] - begin
21:04:31 [main] TransactionImpl[DEBUG] - committing
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Processing flush-time cascades
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Dirty checking collections
21:04:31 [main] Collections[DEBUG] - Collection found: [com.dauphine.domain.Entreprise.apprentissages#1], was: [<unreferenced>] (initialized)
21:04:31 [main] Collections[DEBUG] - Collection found: [com.dauphine.domain.Entreprise.apprentissages#2], was: [<unreferenced>] (initialized)
21:04:31 [main] Collections[DEBUG] - Collection dereferenced: [com.dauphine.domain.Entreprise.apprentissages#1]
21:04:31 [main] Collections[DEBUG] - Collection dereferenced: [com.dauphine.domain.Entreprise.apprentissages#2]
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Flushed: 0 insertions, 2 updates, 2 deletions to 12 objects
21:04:31 [main] AbstractFlushingEventListener[DEBUG] - Flushed: 2 (re)creations, 0 updates, 2 removals to 4 collections
21:04:31 [main] EntityPrinter[DEBUG] - Listing entities:
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=4, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}, nom=Doeuf, prenom=John}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#2, nomMA=Mahjoub, prenomMA=Ridha, id=component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}, apprenti=com.dauphine.domain.Apprenti#2}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=3, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}, nom=D'Armery, prenom=Jean}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#2, nomMA=Carena, prenomMA=Emma, id=component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}, apprenti=com.dauphine.domain.Apprenti#5}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=5, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=5}, nom=Liz, prenom=Anna}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Carena, prenomMA=Emma, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=3}, apprenti=com.dauphine.domain.Apprenti#3}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=2, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=2, apprentiId=2}, nom=Madkour, prenom=Chafiq}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Entreprise{apprentissages=[], adresse=Paris, id=2, nom=Crédit agricole}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprenti{id=1, apprentissage=com.dauphine.domain.Apprentissage#component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}, nom=Belgacem, prenom=Adam}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Entreprise{apprentissages=[], adresse=Paris, id=1, nom=Banque de France}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Manouvrier, prenomMA=Maude, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=1}, apprenti=com.dauphine.domain.Apprenti#1}
21:04:31 [main] EntityPrinter[DEBUG] - com.dauphine.domain.Apprentissage{entreprise=com.dauphine.domain.Entreprise#1, nomMA=Golo, prenomMA=Terry, id=component[apprentiId,entrepriseId]{entrepriseId=1, apprentiId=4}, apprenti=com.dauphine.domain.Apprenti#4}
21:04:31 [main] SQL[DEBUG] - 
    delete 
    from
        apprentissage 
    where
        apprenti_id=? 
        and entreprise_id=?
Hibernate: 
    delete 
    from
        apprentissage 
    where
        apprenti_id=? 
        and entreprise_id=?
21:04:31 [main] SQL[DEBUG] - 
    delete 
    from
        apprenti 
    where
        apprenti_id=?
Hibernate: 
    delete 
    from
        apprenti 
    where
        apprenti_id=?
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] App[DEBUG] - Apprenti [id=3, nom=D'Armery, prenom=Jean]
21:04:31 [main] SQL[DEBUG] - 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
Hibernate: 
    select
        apprenti0_.apprenti_id as apprenti1_0_0_,
        apprenti0_.nom as nom2_0_0_,
        apprenti0_.premom as premom3_0_0_,
        apprentiss1_.apprenti_id as apprenti1_1_1_,
        apprentiss1_.entreprise_id as entrepri2_1_1_,
        apprentiss1_.nomMA as nomMA3_1_1_,
        apprentiss1_.prenomMA as prenomMA4_1_1_,
        entreprise2_.entreprise_id as entrepri1_2_2_,
        entreprise2_.adresse as adresse2_2_2_,
        entreprise2_.nom as nom3_2_2_ 
    from
        apprenti apprenti0_ 
    left outer join
        apprentissage apprentiss1_ 
            on apprenti0_.apprenti_id=apprentiss1_.apprenti_id 
    left outer join
        entreprise entreprise2_ 
            on apprentiss1_.entreprise_id=entreprise2_.entreprise_id 
    where
        apprenti0_.apprenti_id=?
21:04:31 [main] ResourceRegistryStandardImpl[DEBUG] - HHH000387: ResultSet's statement was not registered
21:04:31 [main] AbstractLoadPlanBasedEntityLoader[DEBUG] - Done entity load : com.dauphine.domain.Apprenti#4
21:04:31 [main] LogicalConnectionManagedImpl[DEBUG] - Initiating JDBC connection release from afterTransaction
21:04:31 [main] App[ERROR] - Something really bad happened : 
java.lang.NullPointerException
	at com.dauphine.App.tryApprenti(App.java:218)
	at com.dauphine.App.case2(App.java:113)
	at com.dauphine.App.main(App.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
21:04:31 [main] App[INFO] - Stop running...

Process finished with exit code 0
